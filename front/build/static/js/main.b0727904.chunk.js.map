{"version":3,"sources":["App.tsx","reportWebVitals.ts","EditorPage.tsx","index.tsx"],"names":["fontFamily","join","theme","createMuiTheme","typography","palette","primary","Colors","type","useStyles","makeStyles","root","flexGrow","menuButton","marginRight","spacing","title","appBar","appBarSpacer","mixins","toolbar","SearchfieldSize","width","marginTop","listItemSize","padding","paddingTop","paperSize","paperTypoTitleSize","paperTypoBodySize","margin","paddingBottom","fab","position","bottom","right","LinkSize","textDecoration","Header","props","classes","AppBar","className","Toolbar","IconButton","edge","color","aria-label","onClick","handleClick","snackbarTextHandle","Typography","variant","PaperListItem","ListItem","to","Paper","noWrap","CreatePaperItems","itemList","i","push","Body","Container","TextField","label","List","style","maxHeight","overflow","Fab","App","state","open","snackbarText","setSnackbarText","handleClose","bind","text","this","setState","event","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","message","action","Fragment","size","fontSize","CssBaseline","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","exact","path","component","Editor","document","getElementById"],"mappings":"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","file":"static/js/main.b0727904.chunk.js","sourcesContent":["import React from 'react';\r\nimport Axios from 'axios';\r\nimport { AppBar, Button, Container, CssBaseline, Fab, IconButton, List, ListItem, Paper, Snackbar, SnackbarProps, TextField, Toolbar, Typography } from '@material-ui/core';\r\nimport { MuiThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport * as Colors from '@material-ui/core/colors';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { dark } from '@material-ui/core/styles/createPalette';\r\nimport { Palette } from '@material-ui/icons';\r\nimport { Console } from 'console';\r\nimport { Link } from 'react-router-dom';\r\n\r\nconst fontFamily = [\r\n  \"Noto Sans JP\",\r\n  \"Lato\",\r\n  \"游ゴシック Medium\",\r\n  \"游ゴシック体\",\r\n  \"Yu Gothic Medium\",\r\n  \"YuGothic\",\r\n  \"ヒラギノ角ゴ ProN\",\r\n  \"Hiragino Kaku Gothic ProN\",\r\n  \"メイリオ\",\r\n  \"Meiryo\",\r\n  \"ＭＳ Ｐゴシック\",\r\n  \"MS PGothic\",\r\n  \"sans-serif\",\r\n].join(\",\");\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: fontFamily,\r\n  },\r\n  palette: {\r\n    primary:Colors.grey,\r\n    type:\"dark\",\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  appBar: {\r\n    \r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  SearchfieldSize:{\r\n    width: \"100%\",\r\n    marginTop:\"2%\",\r\n  },\r\n  listItemSize:{\r\n    padding:0,\r\n    paddingTop:5,\r\n  },\r\n  paperSize:{\r\n    width:\"100%\",\r\n  },\r\n  paperTypoTitleSize:{\r\n    padding:\"1%\",\r\n  },\r\n  paperTypoBodySize:{\r\n    margin:\"1%\",\r\n    marginTop:\"1%\",\r\n    paddingBottom:\"1%\",\r\n  },\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n  LinkSize:{\r\n    width:\"100%\",\r\n    textDecoration:\"none\",\r\n  },\r\n}));\r\n\r\nfunction SimpleSnackbar() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event: React.SyntheticEvent | React.MouseEvent, reason?: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClick}>Open simple snackbar</Button>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        message=\"Note archived\"\r\n        action={\r\n          <React.Fragment>\r\n            <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\r\n              UNDO\r\n            </Button>\r\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface HeaderProps{\r\n  handleClick:()=>void;\r\n  snackbarTextHandle:(snackbarText:string) => void;\r\n}\r\n\r\nfunction Header(props:HeaderProps){\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <header>\r\n      <AppBar className={classes.appBar} position=\"fixed\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={() => {\r\n            props.handleClick();\r\n            props.snackbarTextHandle(\"メニュー表示\");\r\n          }}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            メモメモメ\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </header>\r\n  );\r\n}\r\n\r\ninterface PaperListItemProps{\r\n  classes:{\r\n    paperSize: string | undefined;\r\n    paperTypoTitleSize: string | undefined;\r\n    paperTypoBodySize: string | undefined;\r\n    listItemSize: string | undefined;\r\n    LinkSize:string | undefined;\r\n  }\r\n  handleClick:() => void;\r\n}\r\n\r\nfunction PaperListItem(props:PaperListItemProps){\r\n  return(\r\n    <ListItem className={props.classes.listItemSize}>\r\n      <Link to=\"/editor\" className={props.classes.LinkSize}>\r\n        <Paper className={props.classes.paperSize} onClick={props.handleClick}>\r\n          <Typography className={props.classes.paperTypoTitleSize} variant=\"h5\" noWrap>\r\n            見出し\r\n          </Typography>\r\n          <Typography className={props.classes.paperTypoBodySize} variant=\"body1\" noWrap>\r\n            内容:hogehogehogehogehogehogehogehogehogrhogrhogr\r\n          </Typography>\r\n        </Paper>\r\n      </Link>\r\n    </ListItem>\r\n  );\r\n}\r\n\r\ninterface CreatePaperItemsProps{\r\n  classes:{\r\n    paperSize: string | undefined;\r\n    paperTypoTitleSize: string | undefined;\r\n    paperTypoBodySize: string | undefined;\r\n    listItemSize: string | undefined;\r\n    LinkSize: string | undefined;\r\n  }\r\n  handleClick:() => void;\r\n}\r\n\r\nfunction CreatePaperItems(props:CreatePaperItemsProps){\r\n  let itemList=[]\r\n  for(let i=0;i<10;i++){\r\n    itemList.push(PaperListItem({classes:props.classes,handleClick:props.handleClick}))\r\n  }\r\n  return(<>\r\n    {itemList}\r\n  </>\r\n    );\r\n}\r\n\r\ninterface BodyProps{\r\n  handleClick:() => void;\r\n  snackbarTextHandle:(snackbarText:string) => void;\r\n}\r\n\r\nfunction Body(props:BodyProps){\r\n  const classes = useStyles();\r\n  return(\r\n    <div>\r\n      <div className={classes.appBarSpacer} />\r\n          <Container>\r\n            <TextField label=\"検索\" className={classes.SearchfieldSize}/>\r\n            <List style={{maxHeight: '100%', overflow: 'auto'}}>\r\n              <CreatePaperItems classes={classes} handleClick={() =>{props.handleClick();props.snackbarTextHandle(\"編集画面へ遷移\")}}/>\r\n            </List>\r\n            <Link to=\"/editor\">\r\n              <Fab color=\"primary\" aria-label=\"add\" className={classes.fab}>\r\n                <AddIcon />\r\n              </Fab>\r\n            </Link>\r\n          </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface AppState{\r\n  open:boolean;\r\n  snackbarText:string;\r\n  snackbarTextHandle:(snackbarText:string) => void;\r\n}\r\n\r\nclass App extends React.Component<any,AppState>{\r\n  constructor(props: AppState | Readonly<AppState>){\r\n    super(props);\r\n    this.state = {\r\n      open:false,\r\n      snackbarText:\"\",\r\n      snackbarTextHandle:this.setSnackbarText,\r\n    };\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.setSnackbarText = this.setSnackbarText.bind(this);\r\n  }\r\n  setSnackbarText(text:string){\r\n    this.setState({\r\n      snackbarText:text,\r\n    });\r\n  }\r\n  handleClose(event: React.SyntheticEvent | React.MouseEvent, reason?: string){\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    this.setState({\r\n      open:false,\r\n    }\r\n    );\r\n  };\r\n  render(){\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n      <div>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          open={this.state.open}\r\n          autoHideDuration={6000}\r\n          onClose={this.handleClose}\r\n          message={this.state.snackbarText}\r\n          action={\r\n            <React.Fragment>\r\n              <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.handleClose}>\r\n                <CloseIcon fontSize=\"small\" />\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n        <CssBaseline />\r\n        <Header snackbarTextHandle={this.setSnackbarText} handleClick={() => {\r\n          this.setState({\r\n            open:true,\r\n          });\r\n        }}/>\r\n        <Body snackbarTextHandle={this.setSnackbarText} handleClick={()=>{this.setState({open:true})}}/>\r\n      </div>\r\n    </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);  \r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n}\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport Axios from 'axios';\r\nimport { AppBar, Button, Container, CssBaseline, Fab, IconButton, List, ListItem, Paper, Snackbar, SnackbarProps, TextField, Toolbar, Typography } from '@material-ui/core';\r\nimport { MuiThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport * as Colors from '@material-ui/core/colors';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { dark } from '@material-ui/core/styles/createPalette';\r\nimport { Palette } from '@material-ui/icons';\r\nimport { Console } from 'console';\r\n\r\nconst fontFamily = [\r\n  \"Noto Sans JP\",\r\n  \"Lato\",\r\n  \"游ゴシック Medium\",\r\n  \"游ゴシック体\",\r\n  \"Yu Gothic Medium\",\r\n  \"YuGothic\",\r\n  \"ヒラギノ角ゴ ProN\",\r\n  \"Hiragino Kaku Gothic ProN\",\r\n  \"メイリオ\",\r\n  \"Meiryo\",\r\n  \"ＭＳ Ｐゴシック\",\r\n  \"MS PGothic\",\r\n  \"sans-serif\",\r\n].join(\",\");\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: fontFamily,\r\n  },\r\n  palette: {\r\n    primary:Colors.grey,\r\n    type:\"dark\",\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  appBar: {\r\n    \r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  SearchfieldSize:{\r\n    width: \"100%\",\r\n    marginTop:\"2%\",\r\n  },\r\n  listItemSize:{\r\n    padding:0,\r\n    paddingTop:5,\r\n  },\r\n  paperSize:{\r\n    width:\"100%\",\r\n  },\r\n  paperTypoTitleSize:{\r\n    padding:\"1%\",\r\n  },\r\n  paperTypoBodySize:{\r\n    margin:\"1%\",\r\n    marginTop:\"-1%\",\r\n  },\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction SimpleSnackbar() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event: React.SyntheticEvent | React.MouseEvent, reason?: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClick}>Open simple snackbar</Button>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        message=\"Note archived\"\r\n        action={\r\n          <React.Fragment>\r\n            <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\r\n              UNDO\r\n            </Button>\r\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface HeaderProps{\r\n  handleClick:()=>void;\r\n  snackbarTextHandle:(snackbarText:string) => void;\r\n}\r\n\r\nfunction Header(props:HeaderProps){\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <header>\r\n      <AppBar className={classes.appBar} position=\"fixed\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={() => {\r\n            props.handleClick();\r\n            props.snackbarTextHandle(\"メニュー表示\");\r\n          }}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            メモメモメ\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </header>\r\n  );\r\n}\r\n\r\ninterface PaperListItemProps{\r\n  classes:{\r\n    paperSize: string | undefined;\r\n    paperTypoTitleSize: string | undefined;\r\n    paperTypoBodySize: string | undefined;\r\n    listItemSize: string | undefined;\r\n  }\r\n  handleClick:() => void;\r\n}\r\n\r\nfunction PaperListItem(props:PaperListItemProps){\r\n  return(\r\n    <ListItem className={props.classes.listItemSize}>\r\n      <Paper className={props.classes.paperSize} onClick={props.handleClick}>\r\n        <Typography className={props.classes.paperTypoTitleSize} variant=\"h5\" noWrap>\r\n          見出し\r\n        </Typography>\r\n        <Typography className={props.classes.paperTypoBodySize} variant=\"body1\" noWrap>\r\n          内容:hogehogehogehogehogehogehogehogehogrhogrhogr\r\n        </Typography>\r\n      </Paper>\r\n    </ListItem>\r\n  );\r\n}\r\n\r\ninterface CreatePaperItemsProps{\r\n  classes:{\r\n    paperSize: string | undefined;\r\n    paperTypoTitleSize: string | undefined;\r\n    paperTypoBodySize: string | undefined;\r\n    listItemSize: string | undefined;\r\n  }\r\n  handleClick:() => void;\r\n}\r\n\r\nfunction CreatePaperItems(props:CreatePaperItemsProps){\r\n  let itemList=[]\r\n  for(let i=0;i<10;i++){\r\n    itemList.push(PaperListItem({classes:props.classes,handleClick:props.handleClick}))\r\n  }\r\n  console.log(\"awqwewe\");\r\n  console.log(itemList);\r\n  return(<>\r\n    {itemList}\r\n  </>\r\n    );\r\n}\r\n\r\ninterface BodyProps{\r\n  handleClick:() => void;\r\n  snackbarTextHandle:(snackbarText:string) => void;\r\n}\r\n\r\nfunction Body(props:BodyProps){\r\n  const classes = useStyles();\r\n  return(\r\n    <div>\r\n      <div className={classes.appBarSpacer} />\r\n          <Container>\r\n            \r\n          </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface AppState{\r\n  open:boolean;\r\n  snackbarText:string;\r\n  snackbarTextHandle:(snackbarText:string) => void;\r\n}\r\n\r\nclass App extends React.Component<any,AppState>{\r\n  constructor(props: AppState | Readonly<AppState>){\r\n    super(props);\r\n    this.state = {\r\n      open:false,\r\n      snackbarText:\"\",\r\n      snackbarTextHandle:this.setSnackbarText,\r\n    };\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.setSnackbarText = this.setSnackbarText.bind(this);\r\n  }\r\n  setSnackbarText(text:string){\r\n    this.setState({\r\n      snackbarText:text,\r\n    });\r\n  }\r\n  handleClose(event: React.SyntheticEvent | React.MouseEvent, reason?: string){\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    this.setState({\r\n      open:false,\r\n    }\r\n    );\r\n  };\r\n  render(){\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n      <div>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          open={this.state.open}\r\n          autoHideDuration={6000}\r\n          onClose={this.handleClose}\r\n          message={this.state.snackbarText}\r\n          action={\r\n            <React.Fragment>\r\n              <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.handleClose}>\r\n                <CloseIcon fontSize=\"small\" />\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n        <CssBaseline />\r\n        <Header snackbarTextHandle={this.setSnackbarText} handleClick={() => {\r\n          this.setState({\r\n            open:true,\r\n          });\r\n        }}/>\r\n        <Body snackbarTextHandle={this.setSnackbarText} handleClick={()=>{this.setState({open:true})}}/>\r\n      </div>\r\n    </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Editor from './EditorPage';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={App} />\r\n          <Route exact path=\"/editor\" component={Editor} />\r\n          <Route component={App} />\r\n        </Switch>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}