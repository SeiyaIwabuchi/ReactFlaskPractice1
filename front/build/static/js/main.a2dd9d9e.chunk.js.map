{"version":3,"sources":["MemoData.ts","App.tsx","reportWebVitals.ts","EditorPage.tsx","index.tsx"],"names":["MemoData","id","title","body","datetime","this","fontFamily","join","theme","createMuiTheme","typography","palette","primary","Colors","type","useStyles","makeStyles","root","flexGrow","menuButton","marginRight","spacing","appBar","appBarSpacer","mixins","toolbar","SearchfieldSize","width","marginTop","listItemSize","padding","paddingTop","paperSize","paperTypoTitleSize","paperTypoBodySize","margin","paddingBottom","fab","position","bottom","right","LinkSize","textDecoration","Header","props","classes","AppBar","className","Toolbar","IconButton","edge","color","aria-label","onClick","handleClick","snackbarTextHandle","Typography","variant","CreatePaperItems","itemList","memoData","forEach","memo","push","ListItem","Paper","noWrap","PaperListItem","Body","Container","TextField","label","List","style","maxHeight","overflow","Fab","App","state","open","snackbarText","setSnackbarText","jsonData","handleClose","bind","fetch","method","then","response","json","data","setJsonData","catch","error","console","log","j","setState","text","event","reason","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","message","action","Fragment","size","fontSize","CssBaseline","editMode","history","pathname","React","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","height","useState","anchorEl","setAnchorEl","to","headers","JSON","stringify","currentTarget","textAlign","keepMounted","Boolean","MenuItem","replace","titleText","setTitleText","bodyText","setBodyText","value","onChange","target","handleUpdateMemo","multiline","marginBottom","memodata","location","ReactDOM","render","StrictMode","exact","path","component","Editor","document","getElementById"],"mappings":"waAaeA,EARX,aAAc,yBAJdC,QAIa,OAHbC,WAGa,OAFbC,UAEa,OADbC,cACa,EACXC,KAAKJ,GAAK,EACVI,KAAKH,MAAQ,GACbG,KAAKF,KAAO,GACZE,KAAKD,SAAW,ICKhBE,EAAa,CACjB,eACA,OACA,wCACA,uCACA,mBACA,WACA,4CACA,4BACA,2BACA,SACA,8CACA,aACA,cACAC,KAAK,KAEDC,EAAQC,YAAe,CAC3BC,WAAY,CACVJ,WAAYA,GAEdK,QAAS,CACPC,QAAQC,IACRC,KAAK,UAIHC,EAAYC,aAAW,SAACR,GAAD,MAAY,CACvCS,KAAM,CACJC,SAAU,GAEZC,WAAY,CACVC,YAAaZ,EAAMa,QAAQ,IAE7BnB,MAAO,CACLgB,SAAU,GAEZI,OAAQ,GAGRC,aAAcf,EAAMgB,OAAOC,QAC3BC,gBAAgB,CACdC,MAAO,OACPC,UAAU,MAEZC,aAAa,CACXC,QAAQ,EACRC,WAAW,GAEbC,UAAU,CACRL,MAAM,QAERM,mBAAmB,CACjBH,QAAQ,MAEVI,kBAAkB,CAChBC,OAAO,KACPP,UAAU,KACVQ,cAAc,MAEhBC,IAAK,CACHC,SAAU,QACVC,OAAQ/B,EAAMa,QAAQ,GACtBmB,MAAOhC,EAAMa,QAAQ,IAEvBoB,SAAS,CACPd,MAAM,OACNe,eAAe,YAmDnB,SAASC,EAAOC,GACd,IAAMC,EAAU9B,IAEhB,OACE,iCACE,cAAC+B,EAAA,EAAD,CAAQC,UAAWF,EAAQvB,OAAQgB,SAAS,QAA5C,SACE,eAACU,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,KAAK,QAAQH,UAAWF,EAAQ1B,WAAYgC,MAAM,UAAUC,aAAW,OAAOC,QAAS,WACjGT,EAAMU,cACNV,EAAMW,mBAAmB,yCAF3B,SAIE,cAAC,IAAD,MAEF,cAACC,EAAA,EAAD,CAAYC,QAAQ,KAAKV,UAAWF,EAAQ3C,MAA5C,mDAoDV,SAASwD,EAAiBd,GACxB,IAAIe,EAAwB,GAI5B,OAHAf,EAAMgB,SAASC,SAAQ,SAACC,GACtBH,EAASI,KAlCb,SAAuBnB,GACrB,OACE,cAACoB,EAAA,EAAD,CAAUjB,UAAWH,EAAMC,QAAQhB,aAAnC,SAEI,eAACoC,EAAA,EAAD,CAAOlB,UAAWH,EAAMC,QAAQb,UAAWqB,QAAS,WAClDT,EAAMU,YAAYV,EAAMkB,OAD1B,UAGE,cAACN,EAAA,EAAD,CAAYT,UAAWH,EAAMC,QAAQZ,mBAAoBwB,QAAQ,KAAKS,QAAM,EAA5E,SACGtB,EAAMkB,KAAK5D,QAEd,cAACsD,EAAA,EAAD,CAAYT,UAAWH,EAAMC,QAAQX,kBAAmBuB,QAAQ,QAAQS,QAAM,EAA9E,SACGtB,EAAMkB,KAAK3D,YAuBNgE,CAAc,CAACtB,QAAQD,EAAMC,QAAQS,YAAY,SAACQ,GAAmBlB,EAAMU,YAAYQ,IAAOA,KAAKA,QAE5G,mCACJH,IAUL,SAASS,EAAKxB,GACZ,IAAMC,EAAU9B,IAChB,OACE,gCACE,qBAAKgC,UAAWF,EAAQtB,eACpB,eAAC8C,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAWC,MAAM,eAAKxB,UAAWF,EAAQnB,kBACzC,cAAC8C,EAAA,EAAD,CAAMC,MAAO,CAACC,UAAW,OAAQC,SAAU,QAA3C,SACE,cAACjB,EAAD,CAAkBb,QAASA,EAASe,SAAUhB,EAAMgB,SAAUN,YAAa,SAACQ,GAC1ElB,EAAMU,YAAYQ,EAAK,eAG3B,cAACc,EAAA,EAAD,CAAKzB,MAAM,UAAUC,aAAW,MAAML,UAAWF,EAAQR,IAAKgB,QAAS,WACrET,EAAMU,YAAY,IAAItD,EAAW,WADnC,SAGE,cAAC,IAAD,Y,IAsGC6E,E,kDArFb,WAAYjC,GAAsC,IAAD,8BAC/C,cAAMA,IACDkC,MAAQ,CACXC,MAAK,EACLC,aAAa,GACbzB,mBAAmB,EAAK0B,gBACxBC,SAAS,GACTtB,SAAS,IAAI5D,GAEf,EAAKmF,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKH,gBAAkB,EAAKA,gBAAgBG,KAArB,gBACvBC,MAAM,iCAAiC,CACrCC,OAAO,QAERC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAACG,GACL,EAAKC,YAAYD,MAElBE,OAAM,SAACC,GACNC,QAAQD,MAAM,UAAWA,MAE3BC,QAAQC,IAAI,4EArBmC,E,wDAuBrCC,GACV3F,KAAK4F,SAAS,CACZf,SAASc,M,sCAGGE,GACd7F,KAAK4F,SAAS,CACZjB,aAAakB,M,kCAGLC,EAAgDC,GAC3C,cAAXA,GAGJ/F,KAAK4F,SAAS,CACZlB,MAAK,M,+BAIA,IAAD,OACN,OACE,cAAC,IAAD,CAAkBvE,MAAOA,EAAzB,SACA,gCACE,cAAC6F,EAAA,EAAD,CACEC,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdzB,KAAM1E,KAAKyE,MAAMC,KACjB0B,iBAAkB,IAClBC,QAASrG,KAAK8E,YACdwB,QAAStG,KAAKyE,MAAME,aACpB4B,OACE,cAAC,IAAMC,SAAP,UACE,cAAC5D,EAAA,EAAD,CAAY6D,KAAK,QAAQ1D,aAAW,QAAQD,MAAM,UAAUE,QAAShD,KAAK8E,YAA1E,SACE,cAAC,IAAD,CAAW4B,SAAS,gBAK5B,cAACC,EAAA,EAAD,IACA,cAACrE,EAAD,CAAQY,mBAAoBlD,KAAK4E,gBAAiB3B,YAAa,WAC7D,EAAK2C,SAAS,CACZlB,MAAK,OAGT,cAACX,EAAD,CAAMR,SAAUvD,KAAKyE,MAAMI,SAAU5B,YAAa,SAACQ,EAAcmD,GAC/DnB,QAAQC,IAAIjC,GACZ,EAAKlB,MAAMsE,QAAQnD,KAAK,CACtBoD,SAAS,UACTrC,MAAM,CACJlB,SAAWE,EACXmD,SAAWA,iB,GA7EPG,IAAMC,WCpOTC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBjC,MAAK,YAAkD,IAA/CkC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,2DCMRjH,EAAa,CACjB,eACA,OACA,wCACA,uCACA,mBACA,WACA,4CACA,4BACA,2BACA,SACA,8CACA,aACA,cACAC,KAAK,KAEDC,EAAQC,YAAe,CAC3BC,WAAY,CACVJ,WAAYA,GAEdK,QAAS,CACPC,QAAQC,IACRC,KAAK,UAIHC,GAAYC,aAAW,SAACR,GAAD,MAAY,CACvCS,KAAM,CACJC,SAAU,EACV4G,OAAO,QAET3G,WAAY,CACVC,YAAaZ,EAAMa,QAAQ,IAE7BnB,MAAO,CACLgB,SAAU,GAEZI,OAAQ,GAGRC,aAAcf,EAAMgB,OAAOC,QAC3BC,gBAAgB,CACdC,MAAO,OACPC,UAAU,MAEZC,aAAa,CACXC,QAAQ,EACRC,WAAW,GAEbC,UAAU,CACRG,OAAO,KACPP,UAAU,KACVD,MAAM,OACNmG,OAAO,OACPhG,QAAQ,MAEVG,mBAAmB,CACjBE,OAAO,MAGTD,kBAAkB,CAChBC,OAAO,KACPP,UAAU,OAEZS,IAAK,CACHC,SAAU,QACVC,OAAQ/B,EAAMa,QAAQ,GACtBmB,MAAOhC,EAAMa,QAAQ,QAsDzB,SAASsB,GAAOC,GACd,IAAMC,EAAU9B,KADgB,EAEAqG,IAAMW,SAA6B,MAFnC,mBAEzBC,EAFyB,KAEfC,EAFe,KAGhC,OACE,iCACE,cAACnF,EAAA,EAAD,CAAQC,UAAWF,EAAQvB,OAAQgB,SAAS,QAA5C,SACE,eAACU,EAAA,EAAD,WACE,cAAC,IAAD,CAAMkF,GAAG,IAAIzD,MAAO,CAAC/B,eAAe,QAApC,SACE,cAACO,EAAA,EAAD,CAAYC,KAAK,QAAQH,UAAWF,EAAQ1B,WAAYgC,MAAM,UAAUC,aAAW,OAAOC,QAAS,WACjGT,EAAMU,cACNV,EAAMW,mBAAmB,wCACG,KAAzBX,EAAMgB,SAAS1D,OAAwC,KAAxB0C,EAAMgB,SAASzD,MAC/CkF,MAAM,iCAAiC,CACrCC,OAA2B,WAAnB1C,EAAMqE,SAAsB,MAAM,OAC1CkB,QAAS,CACP,eAAgB,oBAElBhI,KAAMiI,KAAKC,UAAU,CAACpI,GAAG2C,EAAMgB,SAAS3D,GAAGC,MAAM0C,EAAMgB,SAAS1D,MAAMC,KAAKyC,EAAMgB,SAASzD,SAE3FoF,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BG,OAAM,SAACC,GAAWC,QAAQC,IAAIF,OAZnC,SAeE,cAAC,IAAD,CAAe1C,MAAM,eAGzB,cAACK,EAAA,EAAD,CAAYC,QAAQ,KAAKV,UAAWF,EAAQ3C,MAA5C,4CAGE,cAAC+C,EAAA,EAAD,CAAYC,KAAK,QAAQH,UAAWF,EAAQ1B,WAAYgC,MAAM,UAAUC,aAAW,OAAOC,QAAS,SAAC8C,GAChG8B,EAAY9B,EAAMmC,gBADtB,SAGE,cAAC,IAAD,CAAcnF,MAAM,SAASsB,MAAO,CAClC8D,UAAU,aAGd,cAAC,IAAD,CACEtI,GAAG,cACH+H,SAAUA,EACVQ,aAAW,EACXzD,KAAM0D,QAAQT,GACdtB,QAAS,WAAKuB,EAAY,OAL5B,SAOE,cAACS,EAAA,EAAD,CAAUrF,QAAS,WACf4E,EAAY,MACgB,KAAzBrF,EAAMgB,SAAS1D,OAAwC,KAAxB0C,EAAMgB,SAASzD,OAC/CkF,MAAM,iCAAiC,CACrCC,OAA2B,WAAnB1C,EAAMqE,SAAsB,SAAS,OAC7CkB,QAAS,CACP,eAAgB,oBAElBhI,KAAMiI,KAAKC,UAAU,CAACpI,GAAG2C,EAAMgB,SAAS3D,GAAGC,MAAM0C,EAAMgB,SAAS1D,MAAMC,KAAKyC,EAAMgB,SAASzD,SAE3FoF,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BG,OAAM,SAACC,GAAWC,QAAQC,IAAIF,MAC/BjD,EAAMsE,QAAQyB,QAAQ,OAZ5B,mCA6Bd,SAASvE,GAAKxB,GACZ,IAAMC,EAAU9B,KADY,EAEKgH,mBAASnF,EAAMkB,KAAK5D,OAFzB,mBAErB0I,EAFqB,KAEXC,EAFW,OAGGd,mBAASnF,EAAMkB,KAAK3D,MAHvB,mBAGrB2I,EAHqB,KAGZC,EAHY,KAI5B,OACE,gCACE,qBAAKhG,UAAWF,EAAQtB,eACpB,cAAC8C,EAAA,EAAD,UACA,eAACJ,EAAA,EAAD,CAAOlB,UAAWF,EAAQb,UAA1B,UACA,cAACsC,EAAA,EAAD,CACEC,MAAM,QACNE,MAAO,CACLtC,OAAO,KACPR,MAAM,OAERqH,MAAOJ,EACPK,SAAU,SAAC9C,GACT0C,EAAa1C,EAAM+C,OAAOF,OAC1BpG,EAAMuG,iBAAiBhD,EAAM+C,OAAOF,MAAMF,MAG9C,uBACA,cAACxE,EAAA,EAAD,CACEC,MAAM,OACN6E,WAAS,EACT3F,QAAQ,WACRgB,MAAO,CACL7C,UAAU,KACVyH,aAAa,KACb1H,MAAM,QAERqH,MAAOF,EACPG,SAAU,SAAC9C,GACT4C,EAAY5C,EAAM+C,OAAOF,OACzBpG,EAAMuG,iBAAiBP,EAAUzC,EAAM+C,OAAOF,kB,IAuF7CnE,G,kDArEb,WAAYjC,GAAsC,IAAD,8BAC/C,cAAMA,IAHR0G,cAEiD,IADjDrC,cACiD,EAE/C,EAAKnC,MAAQ,CACXC,MAAK,EACLC,aAAa,GACbzB,mBAAmB,EAAK0B,iBAE1B,EAAKE,YAAc,EAAKA,YAAYC,KAAjB,gBACnB,EAAKH,gBAAkB,EAAKA,gBAAgBG,KAArB,gBACvB,EAAK+D,iBAAmB,EAAKA,iBAAiB/D,KAAtB,gBACxB,EAAKkE,SAAW,EAAK1G,MAAM2G,SAASzE,MAAMlB,SAC1C,EAAKqD,SAAW,EAAKrE,MAAM2G,SAASzE,MAAMmC,SAXK,E,4DAajCf,GACd7F,KAAK4F,SAAS,CACZjB,aAAakB,M,kCAGLC,EAAgDC,GAC3C,cAAXA,GAGJ/F,KAAK4F,SAAS,CACZlB,MAAK,M,uCAIQ7E,EAAaC,GAC5BE,KAAKiJ,SAASpJ,MAAQA,EACtBG,KAAKiJ,SAASnJ,KAAOA,I,+BAGd,IAAD,OACN,OACE,cAAC,IAAD,CAAkBK,MAAOA,EAAzB,SACA,gCACE,cAAC6F,EAAA,EAAD,CACEC,aAAc,CACZC,SAAU,SACVC,WAAY,QAEdzB,KAAM1E,KAAKyE,MAAMC,KACjB0B,iBAAkB,IAClBC,QAASrG,KAAK8E,YACdwB,QAAStG,KAAKyE,MAAME,aACpB4B,OACE,cAAC,IAAMC,SAAP,UACE,cAAC5D,EAAA,EAAD,CAAY6D,KAAK,QAAQ1D,aAAW,QAAQD,MAAM,UAAUE,QAAShD,KAAK8E,YAA1E,SACE,cAAC,IAAD,CAAW4B,SAAS,gBAK5B,cAACC,EAAA,EAAD,IACA,cAAC,GAAD,CAAQE,QAAS7G,KAAKuC,MAAMsE,QAAS3D,mBAAoBlD,KAAK4E,gBAAiB3B,YAAa,WAC1F,EAAK2C,SAAS,CACZlB,MAAK,KAGTnB,SAAUvD,KAAKiJ,SACfrC,SAAU5G,KAAK4G,WAEf,cAAC,GAAD,CAAM1D,mBAAoBlD,KAAK4E,gBAAiB3B,YAAa,WAAK,EAAK2C,SAAS,CAAClB,MAAK,KAASoE,iBAAkB9I,KAAK8I,iBAAkBrF,KAAMzD,KAAKiJ,oB,GAjEzIlC,IAAMC,W,SCzPxBmC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACI,eAAC,KAAD,WACE,cAAC,KAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAWhF,IACjC,cAAC,KAAD,CAAO8E,OAAK,EAACC,KAAK,UAAUC,UAAWC,KACvC,cAAC,KAAD,CAAOD,UAAWhF,WAI1BkF,SAASC,eAAe,SAO1B1C,M","file":"static/js/main.a2dd9d9e.chunk.js","sourcesContent":["class MemoData{\r\n    id: number;\r\n    title: string;\r\n    body: string;\r\n    datetime: string;\r\n    constructor(){\r\n      this.id = 0;\r\n      this.title = \"\"\r\n      this.body = \"\";\r\n      this.datetime = \"\";\r\n    }\r\n  }\r\n\r\nexport default MemoData;","import React from 'react';\r\nimport Axios from 'axios';\r\nimport { AppBar, Button, Container, CssBaseline, Fab, IconButton, List, ListItem, Paper, Snackbar, SnackbarProps, TextField, Toolbar, Typography } from '@material-ui/core';\r\nimport { MuiThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport * as Colors from '@material-ui/core/colors';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { dark } from '@material-ui/core/styles/createPalette';\r\nimport { Palette } from '@material-ui/icons';\r\nimport { Console } from 'console';\r\nimport { Link } from 'react-router-dom';\r\nimport MemoData from './MemoData';\r\n\r\nconst fontFamily = [\r\n  \"Noto Sans JP\",\r\n  \"Lato\",\r\n  \"游ゴシック Medium\",\r\n  \"游ゴシック体\",\r\n  \"Yu Gothic Medium\",\r\n  \"YuGothic\",\r\n  \"ヒラギノ角ゴ ProN\",\r\n  \"Hiragino Kaku Gothic ProN\",\r\n  \"メイリオ\",\r\n  \"Meiryo\",\r\n  \"ＭＳ Ｐゴシック\",\r\n  \"MS PGothic\",\r\n  \"sans-serif\",\r\n].join(\",\");\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: fontFamily,\r\n  },\r\n  palette: {\r\n    primary:Colors.grey,\r\n    type:\"dark\",\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  appBar: {\r\n    \r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  SearchfieldSize:{\r\n    width: \"100%\",\r\n    marginTop:\"2%\",\r\n  },\r\n  listItemSize:{\r\n    padding:0,\r\n    paddingTop:5,\r\n  },\r\n  paperSize:{\r\n    width:\"100%\",\r\n  },\r\n  paperTypoTitleSize:{\r\n    padding:\"1%\",\r\n  },\r\n  paperTypoBodySize:{\r\n    margin:\"1%\",\r\n    marginTop:\"1%\",\r\n    paddingBottom:\"1%\",\r\n  },\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n  LinkSize:{\r\n    width:\"100%\",\r\n    textDecoration:\"none\",\r\n  },\r\n}));\r\n\r\nfunction SimpleSnackbar() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event: React.SyntheticEvent | React.MouseEvent, reason?: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClick}>Open simple snackbar</Button>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        message=\"Note archived\"\r\n        action={\r\n          <React.Fragment>\r\n            <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\r\n              UNDO\r\n            </Button>\r\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface HeaderProps{\r\n  handleClick:()=>void;\r\n  snackbarTextHandle:(snackbarText:string) => void;\r\n}\r\n\r\nfunction Header(props:HeaderProps){\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <header>\r\n      <AppBar className={classes.appBar} position=\"fixed\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={() => {\r\n            props.handleClick();\r\n            props.snackbarTextHandle(\"メニュー表示\");\r\n          }}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            メモメモメ\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </header>\r\n  );\r\n}\r\n\r\ninterface PaperListItemProps{\r\n  classes:{\r\n    paperSize: string | undefined;\r\n    paperTypoTitleSize: string | undefined;\r\n    paperTypoBodySize: string | undefined;\r\n    listItemSize: string | undefined;\r\n    LinkSize:string | undefined;\r\n  }\r\n  handleClick:(memo:MemoData) => void;\r\n  memo:MemoData;\r\n}\r\n\r\nfunction PaperListItem(props:PaperListItemProps){\r\n  return(\r\n    <ListItem className={props.classes.listItemSize}>\r\n      \r\n        <Paper className={props.classes.paperSize} onClick={() => {\r\n          props.handleClick(props.memo);\r\n          }}>\r\n          <Typography className={props.classes.paperTypoTitleSize} variant=\"h5\" noWrap>\r\n            {props.memo.title}\r\n          </Typography>\r\n          <Typography className={props.classes.paperTypoBodySize} variant=\"body1\" noWrap>\r\n            {props.memo.body}\r\n          </Typography>\r\n        </Paper>\r\n      \r\n    </ListItem>\r\n  );\r\n}\r\n\r\ninterface CreatePaperItemsProps{\r\n  classes:{\r\n    paperSize: string | undefined;\r\n    paperTypoTitleSize: string | undefined;\r\n    paperTypoBodySize: string | undefined;\r\n    listItemSize: string | undefined;\r\n    LinkSize: string | undefined;\r\n  }\r\n  handleClick:(memo:MemoData) => void;\r\n  memoData:MemoData[];\r\n}\r\n\r\nfunction CreatePaperItems(props:CreatePaperItemsProps){\r\n  let itemList: JSX.Element[]=[];\r\n  props.memoData.forEach((memo:MemoData) => {\r\n    itemList.push(PaperListItem({classes:props.classes,handleClick:(memo:MemoData) => {props.handleClick(memo)},memo:memo}))\r\n  })\r\n  return(<>\r\n    {itemList}\r\n  </>\r\n    );\r\n}\r\n\r\ninterface BodyProps{\r\n  handleClick:(memo:MemoData,editMode:\"insert\"|\"update\") => void;\r\n  memoData:MemoData[];\r\n}\r\n\r\nfunction Body(props:BodyProps){\r\n  const classes = useStyles();\r\n  return(\r\n    <div>\r\n      <div className={classes.appBarSpacer} />\r\n          <Container>\r\n            <TextField label=\"検索\" className={classes.SearchfieldSize}/>\r\n            <List style={{maxHeight: '100%', overflow: 'auto'}}>\r\n              <CreatePaperItems classes={classes} memoData={props.memoData} handleClick={(memo:MemoData) =>{\r\n                props.handleClick(memo,\"update\")\r\n                }}/>\r\n            </List>\r\n            <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={()=>{\r\n              props.handleClick(new MemoData(),\"insert\");\r\n              }}>\r\n              <AddIcon />\r\n            </Fab>\r\n          </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface AppState{\r\n  open:boolean;\r\n  snackbarText:string;\r\n  snackbarTextHandle:(snackbarText:string) => void;\r\n  jsonData : MemoData[];\r\n  memoData:MemoData;\r\n}\r\n\r\nclass App extends React.Component<any,AppState>{\r\n  \r\n  constructor(props: AppState | Readonly<AppState>){\r\n    super(props);\r\n    this.state = {\r\n      open:false,\r\n      snackbarText:\"\",\r\n      snackbarTextHandle:this.setSnackbarText,\r\n      jsonData:[],\r\n      memoData:new MemoData(),\r\n    };\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.setSnackbarText = this.setSnackbarText.bind(this);\r\n    fetch(\"http://iwabuchi.ddns.net:8080/\",{\r\n      method:'get'\r\n    })\r\n    .then(response => response.json())\r\n    .then((data:MemoData[]) => {\r\n      this.setJsonData(data);\r\n    })\r\n    .catch((error) => {\r\n      console.error('Error: ', error);\r\n    });\r\n    console.log(\"コンストラクタが呼ばれた\");\r\n  }\r\n  setJsonData(j:MemoData[]){\r\n    this.setState({\r\n      jsonData:j,\r\n    })\r\n  }\r\n  setSnackbarText(text:string){\r\n    this.setState({\r\n      snackbarText:text,\r\n    });\r\n  }\r\n  handleClose(event: React.SyntheticEvent | React.MouseEvent, reason?: string){\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    this.setState({\r\n      open:false,\r\n    }\r\n    );\r\n  };\r\n  render(){\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n      <div>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          open={this.state.open}\r\n          autoHideDuration={6000}\r\n          onClose={this.handleClose}\r\n          message={this.state.snackbarText}\r\n          action={\r\n            <React.Fragment>\r\n              <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.handleClose}>\r\n                <CloseIcon fontSize=\"small\" />\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n        <CssBaseline />\r\n        <Header snackbarTextHandle={this.setSnackbarText} handleClick={() => {\r\n          this.setState({\r\n            open:true,\r\n          });\r\n        }}/>\r\n        <Body memoData={this.state.jsonData} handleClick={(memo:MemoData,editMode:\"insert\"|\"update\")=>{\r\n          console.log(memo);\r\n          this.props.history.push({\r\n            pathname:\"/editor\",\r\n            state:{\r\n              memoData : memo,\r\n              editMode : editMode,\r\n            }\r\n          });\r\n        }}/>\r\n      </div>\r\n    </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);  \r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n}\r\n\r\nexport default reportWebVitals;\r\n","import React, { useState } from 'react';\r\nimport { AppBar, Button, Container, CssBaseline, Fab, IconButton, Input, List, ListItem, Menu, MenuItem, Paper, Snackbar, SnackbarProps, TextField, Toolbar, Typography } from '@material-ui/core';\r\nimport { MuiThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport * as Colors from '@material-ui/core/colors';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { dark } from '@material-ui/core/styles/createPalette';\r\nimport { Palette } from '@material-ui/icons';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { Console } from 'console';\r\nimport { Link } from 'react-router-dom';\r\nimport MemoData from './MemoData'\r\n\r\nconst fontFamily = [\r\n  \"Noto Sans JP\",\r\n  \"Lato\",\r\n  \"游ゴシック Medium\",\r\n  \"游ゴシック体\",\r\n  \"Yu Gothic Medium\",\r\n  \"YuGothic\",\r\n  \"ヒラギノ角ゴ ProN\",\r\n  \"Hiragino Kaku Gothic ProN\",\r\n  \"メイリオ\",\r\n  \"Meiryo\",\r\n  \"ＭＳ Ｐゴシック\",\r\n  \"MS PGothic\",\r\n  \"sans-serif\",\r\n].join(\",\");\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: fontFamily,\r\n  },\r\n  palette: {\r\n    primary:Colors.grey,\r\n    type:\"dark\",\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height:\"100%\",\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  appBar: {\r\n    \r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  SearchfieldSize:{\r\n    width: \"100%\",\r\n    marginTop:\"2%\",\r\n  },\r\n  listItemSize:{\r\n    padding:0,\r\n    paddingTop:5,\r\n  },\r\n  paperSize:{\r\n    margin:\"1%\",\r\n    marginTop:\"5%\",\r\n    width:\"100%\",\r\n    height:\"auto\",\r\n    padding:\"1%\",\r\n  },\r\n  paperTypoTitleSize:{\r\n    margin:\"1%\",\r\n    \r\n  },\r\n  paperTypoBodySize:{\r\n    margin:\"1%\",\r\n    marginTop:\"-1%\",\r\n  },\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction SimpleSnackbar() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event: React.SyntheticEvent | React.MouseEvent, reason?: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClick}>Open simple snackbar</Button>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        message=\"Note archived\"\r\n        action={\r\n          <React.Fragment>\r\n            <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\r\n              UNDO\r\n            </Button>\r\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface HeaderProps{\r\n  handleClick:()=>void;\r\n  snackbarTextHandle:(snackbarText:string) => void;\r\n  memoData:MemoData;\r\n  editMode:\"insert\"|\"update\";\r\n  history:any;\r\n}\r\n\r\nfunction Header(props:HeaderProps){\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  return (\r\n    <header>\r\n      <AppBar className={classes.appBar} position=\"fixed\">\r\n        <Toolbar>\r\n          <Link to=\"/\" style={{textDecoration:\"none\"}}>\r\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={() => {\r\n              props.handleClick();\r\n              props.snackbarTextHandle(\"メニュー表示\");\r\n              if(props.memoData.title !== \"\" && props.memoData.body !== \"\"){\r\n                fetch(\"http://iwabuchi.ddns.net:8080/\",{\r\n                  method:(props.editMode === \"update\"?\"PUT\":\"POST\"),\r\n                  headers: {\r\n                    'Content-Type': 'application/json',\r\n                  },\r\n                  body: JSON.stringify({id:props.memoData.id,title:props.memoData.title,body:props.memoData.body}),\r\n                })\r\n                .then(response => response.json())\r\n                .catch((error) => {console.log(error)});\r\n              }\r\n            }}>\r\n              <ArrowBackIcon color=\"action\" />\r\n            </IconButton>\r\n          </Link>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            メモメモメ\r\n          </Typography>\r\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={(event:React.MouseEvent<HTMLButtonElement>) => {\r\n                setAnchorEl(event.currentTarget);\r\n              }}>\r\n              <MoreVertIcon color=\"action\" style={{\r\n                textAlign:\"right\"\r\n              }}/>\r\n            </IconButton>\r\n            <Menu\r\n              id=\"simple-menu\"\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={Boolean(anchorEl)}\r\n              onClose={()=>{setAnchorEl(null);}}\r\n            >\r\n              <MenuItem onClick={()=>{\r\n                  setAnchorEl(null);\r\n                  if(props.memoData.title !== \"\" && props.memoData.body !== \"\"){\r\n                    fetch(\"http://iwabuchi.ddns.net:8080/\",{\r\n                      method:(props.editMode === \"update\"?\"DELETE\":\"POST\"),\r\n                      headers: {\r\n                        'Content-Type': 'application/json',\r\n                      },\r\n                      body: JSON.stringify({id:props.memoData.id,title:props.memoData.title,body:props.memoData.body}),\r\n                    })\r\n                    .then(response => response.json())\r\n                    .catch((error) => {console.log(error)});\r\n                    props.history.replace(\"/\")\r\n                  }\r\n                }}>削除</MenuItem>\r\n            </Menu>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </header>\r\n  );\r\n}\r\n\r\ninterface BodyProps{\r\n  handleClick:() => void;\r\n  snackbarTextHandle:(snackbarText:string) => void;\r\n  handleUpdateMemo:(title:string,body:string) => void;\r\n  memo:MemoData;\r\n}\r\n\r\nfunction Body(props:BodyProps){\r\n  const classes = useStyles();\r\n  const [titleText,setTitleText] = useState(props.memo.title);\r\n  const [bodyText,setBodyText] = useState(props.memo.body);\r\n  return(\r\n    <div>\r\n      <div className={classes.appBarSpacer} />\r\n          <Container>\r\n          <Paper className={classes.paperSize}>\r\n          <TextField\r\n            label=\"Title\" \r\n            style={{\r\n              margin:\"1%\",\r\n              width:\"98%\",\r\n            }}\r\n            value={titleText}\r\n            onChange={(event)=>{\r\n              setTitleText(event.target.value);\r\n              props.handleUpdateMemo(event.target.value,bodyText);\r\n            }}\r\n          />\r\n          <br/>\r\n          <TextField\r\n            label=\"Body\"\r\n            multiline\r\n            variant=\"outlined\"\r\n            style={{\r\n              marginTop:\"2%\",\r\n              marginBottom:\"2%\",\r\n              width:\"100%\",\r\n            }}\r\n            value={bodyText}\r\n            onChange={(event)=>{\r\n              setBodyText(event.target.value);\r\n              props.handleUpdateMemo(titleText,event.target.value);\r\n            }}\r\n          />\r\n          </Paper>\r\n          </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface AppState{\r\n  open:boolean;\r\n  snackbarText:string;\r\n  snackbarTextHandle:(snackbarText:string) => void;\r\n}\r\n\r\nclass App extends React.Component<any,AppState>{\r\n  memodata:MemoData;\r\n  editMode:\"insert\"|\"update\";\r\n  constructor(props: AppState | Readonly<AppState>){\r\n    super(props);\r\n    this.state = {\r\n      open:false,\r\n      snackbarText:\"\",\r\n      snackbarTextHandle:this.setSnackbarText,\r\n    };\r\n    this.handleClose = this.handleClose.bind(this);\r\n    this.setSnackbarText = this.setSnackbarText.bind(this);\r\n    this.handleUpdateMemo = this.handleUpdateMemo.bind(this);\r\n    this.memodata = this.props.location.state.memoData;\r\n    this.editMode = this.props.location.state.editMode;\r\n  }\r\n  setSnackbarText(text:string){\r\n    this.setState({\r\n      snackbarText:text,\r\n    });\r\n  }\r\n  handleClose(event: React.SyntheticEvent | React.MouseEvent, reason?: string){\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n    this.setState({\r\n      open:false,\r\n    }\r\n    );\r\n  };\r\n  handleUpdateMemo(title:string,body:string){\r\n    this.memodata.title = title;\r\n    this.memodata.body = body;\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n      <div>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          open={this.state.open}\r\n          autoHideDuration={6000}\r\n          onClose={this.handleClose}\r\n          message={this.state.snackbarText}\r\n          action={\r\n            <React.Fragment>\r\n              <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={this.handleClose}>\r\n                <CloseIcon fontSize=\"small\" />\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n        <CssBaseline />\r\n        <Header history={this.props.history} snackbarTextHandle={this.setSnackbarText} handleClick={() => {\r\n          this.setState({\r\n            open:true,\r\n          });\r\n        }}\r\n        memoData={this.memodata}\r\n        editMode={this.editMode}\r\n        />\r\n        <Body snackbarTextHandle={this.setSnackbarText} handleClick={()=>{this.setState({open:true})}} handleUpdateMemo={this.handleUpdateMemo} memo={this.memodata}/>\r\n      </div>\r\n    </MuiThemeProvider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Editor from './EditorPage';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={App} />\r\n          <Route exact path=\"/editor\" component={Editor} />\r\n          <Route component={App} />\r\n        </Switch>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}