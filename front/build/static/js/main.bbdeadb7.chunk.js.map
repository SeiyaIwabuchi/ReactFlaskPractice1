{"version":3,"sources":["MemoData.ts","Session.tsx","App.tsx","reportWebVitals.ts","EditorPage.tsx","index.tsx"],"names":["MemoData","user","id","_title","_body","datetime","this","value","Session","uid","fontFamily","join","theme","createMuiTheme","typography","palette","primary","Colors","type","useStyles","makeStyles","root","flexGrow","menuButton","marginRight","spacing","title","appBar","appBarSpacer","mixins","toolbar","SearchfieldSize","width","marginTop","listItemSize","padding","paddingTop","paperSize","paperTypoTitleSize","paperTypoBodySize","margin","paddingBottom","fab","position","bottom","right","LinkSize","textDecoration","Header","props","classes","AppBar","className","Toolbar","IconButton","edge","color","aria-label","onClick","handleClick","snackbarTextHandle","Typography","variant","CreatePaperItems","itemList","memoData","forEach","memo","push","ListItem","Paper","noWrap","body","PaperListItem","Body","useState","textFieldValue","setTextFieldValue","memoData2","setMemoData2","Container","TextField","label","onChange","event","target","memos","keyword","retList","indexOf","memoFilter","List","style","maxHeight","overflow","Fab","handleClose","setOpen","reason","App","open","snackbarText","setSnackbarText","jsonData","setJsonData","session","setSession","tsession","localStorage","getItem","setUid","fetch","getUid","method","then","response","json","data","setItem","catch","error","console","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","message","action","Fragment","size","fontSize","CssBaseline","editMode","log","history","pathname","state","setMemoData","concat","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","height","React","anchorEl","setAnchorEl","to","headers","JSON","stringify","currentTarget","textAlign","keepMounted","Boolean","MenuItem","replace","titleText","setTitleText","bodyText","setBodyText","multiline","marginBottom","memodata","location","setSnackBarText","ReactDOM","render","StrictMode","exact","path","component","Editor","document","getElementById"],"mappings":"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","file":"static/js/main.bbdeadb7.chunk.js","sourcesContent":["class MemoData {\r\n  user: string;\r\n  id: number;\r\n  private _title: string;\r\n  public get title(): string {\r\n    return this._title;\r\n  }\r\n  public set title(value: string) {\r\n    this._title = value;\r\n  }\r\n  private _body: string;\r\n  public get body(): string {\r\n    return this._body;\r\n  }\r\n  public set body(value: string) {\r\n    this._body = value;\r\n  }\r\n  datetime: string;\r\n  constructor() {\r\n    this.user = \"\";\r\n    this.id = 0;\r\n    this._title = \"\"\r\n    this._body = \"\";\r\n    this.datetime = \"\";\r\n  }\r\n}\r\n\r\nexport default MemoData;","class Session{\r\n    private uid:string;\r\n    constructor(uid:string){\r\n        this.uid = uid;\r\n    }\r\n    setUid(uid:string){\r\n        this.uid = uid;\r\n    }\r\n    getUid(){\r\n        return this.uid;\r\n    }\r\n}\r\n\r\nexport default Session;","import React, { Dispatch, SetStateAction, useState } from 'react';\r\nimport Axios from 'axios';\r\nimport { AppBar, Button, Container, CssBaseline, Fab, IconButton, List, ListItem, Paper, Snackbar, SnackbarProps, TextField, Toolbar, Typography } from '@material-ui/core';\r\nimport { MuiThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport * as Colors from '@material-ui/core/colors';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { dark } from '@material-ui/core/styles/createPalette';\r\nimport { Palette } from '@material-ui/icons';\r\nimport { Console } from 'console';\r\nimport { Link } from 'react-router-dom';\r\nimport MemoData from './MemoData';\r\nimport Session from './Session';\r\nimport ResponseJsonInterface from './ResponseJsonInterface'\r\nimport IHistory from './IHistory';\r\n\r\nconst fontFamily = [\r\n  \"Noto Sans JP\",\r\n  \"Lato\",\r\n  \"游ゴシック Medium\",\r\n  \"游ゴシック体\",\r\n  \"Yu Gothic Medium\",\r\n  \"YuGothic\",\r\n  \"ヒラギノ角ゴ ProN\",\r\n  \"Hiragino Kaku Gothic ProN\",\r\n  \"メイリオ\",\r\n  \"Meiryo\",\r\n  \"ＭＳ Ｐゴシック\",\r\n  \"MS PGothic\",\r\n  \"sans-serif\",\r\n].join(\",\");\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: fontFamily,\r\n  },\r\n  palette: {\r\n    primary:Colors.grey,\r\n    type:\"dark\",\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  appBar: {\r\n    \r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  SearchfieldSize:{\r\n    width: \"100%\",\r\n    marginTop:\"2%\",\r\n  },\r\n  listItemSize:{\r\n    padding:0,\r\n    paddingTop:5,\r\n  },\r\n  paperSize:{\r\n    width:\"100%\",\r\n  },\r\n  paperTypoTitleSize:{\r\n    padding:\"1%\",\r\n  },\r\n  paperTypoBodySize:{\r\n    margin:\"1%\",\r\n    marginTop:\"1%\",\r\n    paddingBottom:\"1%\",\r\n  },\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n  LinkSize:{\r\n    width:\"100%\",\r\n    textDecoration:\"none\",\r\n  },\r\n}));\r\n\r\nfunction SimpleSnackbar() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event: React.SyntheticEvent | React.MouseEvent, reason?: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClick}>Open simple snackbar</Button>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        message=\"Note archived\"\r\n        action={\r\n          <React.Fragment>\r\n            <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\r\n              UNDO\r\n            </Button>\r\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface HeaderProps{\r\n  handleClick:()=>void;\r\n  snackbarTextHandle:(snackbarText:string) => void;\r\n}\r\n\r\nfunction Header(props:HeaderProps){\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <header>\r\n      <AppBar className={classes.appBar} position=\"fixed\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={() => {\r\n            props.handleClick();\r\n            props.snackbarTextHandle(\"メニュー表示\");\r\n          }}>\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            メモメモメ\r\n          </Typography>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </header>\r\n  );\r\n}\r\n\r\ninterface PaperListItemProps{\r\n  classes:{\r\n    paperSize: string | undefined;\r\n    paperTypoTitleSize: string | undefined;\r\n    paperTypoBodySize: string | undefined;\r\n    listItemSize: string | undefined;\r\n    LinkSize:string | undefined;\r\n  }\r\n  handleClick:(memo:MemoData) => void;\r\n  memo:MemoData;\r\n}\r\n\r\nfunction PaperListItem(props:PaperListItemProps){\r\n  return(\r\n    <ListItem className={props.classes.listItemSize}>\r\n      \r\n        <Paper className={props.classes.paperSize} onClick={() => {\r\n          props.handleClick(props.memo);\r\n          }}>\r\n          <Typography className={props.classes.paperTypoTitleSize} variant=\"h5\" noWrap>\r\n            {props.memo.title}\r\n          </Typography>\r\n          <Typography className={props.classes.paperTypoBodySize} variant=\"body1\" noWrap>\r\n            {props.memo.body}\r\n          </Typography>\r\n        </Paper>\r\n      \r\n    </ListItem>\r\n  );\r\n}\r\n\r\ninterface CreatePaperItemsProps{\r\n  classes:{\r\n    paperSize: string | undefined;\r\n    paperTypoTitleSize: string | undefined;\r\n    paperTypoBodySize: string | undefined;\r\n    listItemSize: string | undefined;\r\n    LinkSize: string | undefined;\r\n  }\r\n  handleClick:(memo:MemoData) => void;\r\n  memoData:MemoData[];\r\n}\r\n\r\nfunction CreatePaperItems(props:CreatePaperItemsProps){\r\n  let itemList: JSX.Element[]=[];\r\n  props.memoData.forEach((memo:MemoData) => {\r\n    itemList.push(PaperListItem({classes:props.classes,handleClick:(memo:MemoData) => {props.handleClick(memo)},memo:memo}))\r\n  })\r\n  return(<>\r\n    {itemList}\r\n  </>\r\n    );\r\n}\r\n\r\ninterface BodyProps{\r\n  handleClick:(memo:MemoData,editMode:\"insert\"|\"update\") => void;\r\n  memoData:MemoData[];\r\n  setMemoData:(memos:MemoData[]) => void;\r\n}\r\n\r\nfunction Body(props:BodyProps){\r\n  const classes = useStyles();\r\n  const [textFieldValue,setTextFieldValue] = useState(\"\");\r\n  const [memoData2,setMemoData2] = useState(props.memoData);\r\n  return(\r\n    <div>\r\n      <div className={classes.appBarSpacer} />\r\n          <Container>\r\n            <TextField label=\"検索\" value={textFieldValue} className={classes.SearchfieldSize} onChange={(event) => {\r\n              setTextFieldValue(event.target.value);\r\n              setMemoData2(memoFilter(props.memoData,event.target.value));\r\n            }}/>\r\n            <List style={{maxHeight: '100%', overflow: 'auto'}}>\r\n              <CreatePaperItems classes={classes} memoData={textFieldValue !== \"\" ? memoData2 : props.memoData} handleClick={(memo:MemoData) =>{\r\n                props.handleClick(memo,\"update\")\r\n                }}/>\r\n            </List>\r\n            <Fab color=\"primary\" aria-label=\"add\" className={classes.fab} onClick={()=>{\r\n              props.handleClick(new MemoData(),\"insert\");\r\n              }}>\r\n              <AddIcon />\r\n            </Fab>\r\n          </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\nfunction memoFilter(memos:MemoData[],keyword:string) : MemoData[]{\r\n  let retList:MemoData[] = [];\r\n    memos.forEach(memo => {\r\n      if(memo.title.indexOf(keyword) !== -1){\r\n        if(retList.indexOf(memo) === -1) retList.push(memo)\r\n      }\r\n    });\r\n  return retList;\r\n}\r\n\r\ninterface IAppProps{\r\n  history:IHistory[];\r\n}\r\n\r\nfunction App(props:IAppProps){\r\n  const [open,setOpen] = useState(false);\r\n  const [snackbarText,setSnackbarText] = useState(\"\");\r\n  const [jsonData,setJsonData] = useState<MemoData[]>([]);\r\n  const [session,setSession] = useState(new Session(\"\"));\r\n  const tsession = localStorage.getItem(\"uid\");\r\n  if (tsession != null){\r\n    session.setUid(tsession);\r\n  }\r\n  fetch(\"http://iwabuchi.ddns.net:8080/?uid=\" + session.getUid(),{\r\n    method:'get',\r\n  })\r\n  .then(response => response.json())\r\n  .then((data:ResponseJsonInterface) => {\r\n    setJsonData(data.memos);\r\n    setSession(new Session(data.uid));\r\n    localStorage.setItem(\"uid\",session.getUid());\r\n  })\r\n  .catch((error) => {\r\n    console.error('Error: ', error);\r\n  });\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n    <div>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={\r\n          (event: React.SyntheticEvent | React.MouseEvent,reason?: string) => {\r\n            handleClose(event,setOpen,reason);\r\n          }}\r\n        message={snackbarText}\r\n        action={\r\n          <React.Fragment>\r\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={\r\n              (event: React.SyntheticEvent | React.MouseEvent) => {\r\n                handleClose(event,setOpen);\r\n              }\r\n            }>\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n      <CssBaseline />\r\n      <Header snackbarTextHandle={setSnackbarText} handleClick={() => {\r\n        setOpen(true);\r\n      }}/>\r\n      <Body memoData={jsonData} handleClick={(memo:MemoData,editMode:\"insert\"|\"update\")=>{\r\n        console.log(memo);\r\n        props.history.push({\r\n          pathname:\"/editor\",\r\n          state:{\r\n            memoData : memo,\r\n            editMode : editMode,\r\n            session : session,\r\n          }\r\n        });\r\n      }}\r\n      setMemoData={(memos:MemoData[]) => {\r\n        setJsonData(memos.concat());\r\n      }}\r\n      />\r\n    </div>\r\n  </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nfunction handleClose(event: React.SyntheticEvent | React.MouseEvent,setOpen:Dispatch<SetStateAction<boolean>>,reason?: string){\r\n  if (reason === 'clickaway') {\r\n    return;\r\n  }\r\n  setOpen(false);\r\n};\r\n\r\nexport default App;","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);  \r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n}\r\n\r\nexport default reportWebVitals;\r\n","import React, { Dispatch, SetStateAction, SyntheticEvent, useState } from 'react';\r\nimport { AppBar, Button, Container, CssBaseline, Fab, IconButton, Input, List, ListItem, Menu, MenuItem, Paper, Snackbar, SnackbarCloseReason, SnackbarProps, TextField, Toolbar, Typography } from '@material-ui/core';\r\nimport { MuiThemeProvider, createMuiTheme, makeStyles } from '@material-ui/core/styles'\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport * as Colors from '@material-ui/core/colors';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport ArrowBackIcon from '@material-ui/icons/ArrowBack';\r\nimport { dark } from '@material-ui/core/styles/createPalette';\r\nimport { Palette } from '@material-ui/icons';\r\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\r\nimport { Console } from 'console';\r\nimport { Link } from 'react-router-dom';\r\nimport MemoData from './MemoData'\r\nimport Session from './Session';\r\nimport IHistory from './IHistory';\r\nimport IHistoryState from './IHistoryState';\r\n\r\nconst fontFamily = [\r\n  \"Noto Sans JP\",\r\n  \"Lato\",\r\n  \"游ゴシック Medium\",\r\n  \"游ゴシック体\",\r\n  \"Yu Gothic Medium\",\r\n  \"YuGothic\",\r\n  \"ヒラギノ角ゴ ProN\",\r\n  \"Hiragino Kaku Gothic ProN\",\r\n  \"メイリオ\",\r\n  \"Meiryo\",\r\n  \"ＭＳ Ｐゴシック\",\r\n  \"MS PGothic\",\r\n  \"sans-serif\",\r\n].join(\",\");\r\n\r\nconst theme = createMuiTheme({\r\n  typography: {\r\n    fontFamily: fontFamily,\r\n  },\r\n  palette: {\r\n    primary:Colors.grey,\r\n    type:\"dark\",\r\n  },\r\n});\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    height:\"100%\",\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n  appBar: {\r\n    \r\n  },\r\n  appBarSpacer: theme.mixins.toolbar,\r\n  SearchfieldSize:{\r\n    width: \"100%\",\r\n    marginTop:\"2%\",\r\n  },\r\n  listItemSize:{\r\n    padding:0,\r\n    paddingTop:5,\r\n  },\r\n  paperSize:{\r\n    margin:\"1%\",\r\n    marginTop:\"5%\",\r\n    width:\"100%\",\r\n    height:\"auto\",\r\n    padding:\"1%\",\r\n  },\r\n  paperTypoTitleSize:{\r\n    margin:\"1%\",\r\n    \r\n  },\r\n  paperTypoBodySize:{\r\n    margin:\"1%\",\r\n    marginTop:\"-1%\",\r\n  },\r\n  fab: {\r\n    position: 'fixed',\r\n    bottom: theme.spacing(2),\r\n    right: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nfunction SimpleSnackbar() {\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClick = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = (event: React.SyntheticEvent | React.MouseEvent, reason?: string) => {\r\n    if (reason === 'clickaway') {\r\n      return;\r\n    }\r\n\r\n    setOpen(false);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button onClick={handleClick}>Open simple snackbar</Button>\r\n      <Snackbar\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        open={open}\r\n        autoHideDuration={6000}\r\n        onClose={handleClose}\r\n        message=\"Note archived\"\r\n        action={\r\n          <React.Fragment>\r\n            <Button color=\"secondary\" size=\"small\" onClick={handleClose}>\r\n              UNDO\r\n            </Button>\r\n            <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={handleClose}>\r\n              <CloseIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </React.Fragment>\r\n        }\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface HeaderProps{\r\n  handleClick:()=>void;\r\n  snackbarTextHandle:(snackbarText:string) => void;\r\n  memoData:MemoData;\r\n  editMode:\"insert\"|\"update\";\r\n  history:any;\r\n  session:Session,\r\n}\r\n\r\nfunction Header(props:HeaderProps){\r\n  const classes = useStyles();\r\n  const [anchorEl, setAnchorEl] = React.useState<null | HTMLElement>(null);\r\n  return (\r\n    <header>\r\n      <AppBar className={classes.appBar} position=\"fixed\">\r\n        <Toolbar>\r\n          <Link to=\"/\" style={{textDecoration:\"none\"}}>\r\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={() => {\r\n              props.handleClick();\r\n              props.snackbarTextHandle(\"メニュー表示\");\r\n              if(props.memoData.title !== \"\" && props.memoData.body !== \"\"){\r\n                fetch(\"http://iwabuchi.ddns.net:8080/\",{\r\n                  method:(props.editMode === \"update\"?\"PUT\":\"POST\"),\r\n                  headers: {\r\n                    'Content-Type': 'application/json',\r\n                  },\r\n                  body: JSON.stringify({uid:props.session.getUid(),id:props.memoData.id,title:props.memoData.title,body:props.memoData.body}),\r\n                })\r\n                .then(response => response.json())\r\n                .catch((error) => {console.log(error)});\r\n              }\r\n            }}>\r\n              <ArrowBackIcon color=\"action\" />\r\n            </IconButton>\r\n          </Link>\r\n          <Typography variant=\"h6\" className={classes.title}>\r\n            メモメモメ\r\n          </Typography>\r\n            <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\" onClick={(event:React.MouseEvent<HTMLButtonElement>) => {\r\n                setAnchorEl(event.currentTarget);\r\n              }}>\r\n              <MoreVertIcon color=\"action\" style={{\r\n                textAlign:\"right\"\r\n              }}/>\r\n            </IconButton>\r\n            <Menu\r\n              id=\"simple-menu\"\r\n              anchorEl={anchorEl}\r\n              keepMounted\r\n              open={Boolean(anchorEl)}\r\n              onClose={()=>{setAnchorEl(null);}}\r\n            >\r\n              <MenuItem onClick={()=>{\r\n                  setAnchorEl(null);\r\n                  if(props.memoData.title !== \"\" && props.memoData.body !== \"\"){\r\n                    fetch(\"http://iwabuchi.ddns.net:8080/\",{\r\n                      method:(props.editMode === \"update\"?\"DELETE\":\"POST\"),\r\n                      headers: {\r\n                        'Content-Type': 'application/json',\r\n                      },\r\n                      body: JSON.stringify({uid:props.session.getUid(),id:props.memoData.id}),\r\n                    })\r\n                    .then(response => response.json())\r\n                    .catch((error) => {console.log(error)});\r\n                    props.history.replace(\"/\")\r\n                  }\r\n                }}>削除</MenuItem>\r\n            </Menu>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </header>\r\n  );\r\n}\r\n\r\ninterface BodyProps{\r\n  handleClick:() => void;\r\n  snackbarTextHandle:(snackbarText:string) => void;\r\n  memo:MemoData;\r\n}\r\n\r\nfunction Body(props:BodyProps){\r\n  const classes = useStyles();\r\n  const [titleText,setTitleText] = useState(props.memo.title);\r\n  const [bodyText,setBodyText] = useState(props.memo.body);\r\n  return(\r\n    <div>\r\n      <div className={classes.appBarSpacer} />\r\n          <Container>\r\n          <Paper className={classes.paperSize}>\r\n          <TextField\r\n            label=\"Title\" \r\n            style={{\r\n              margin:\"1%\",\r\n              width:\"98%\",\r\n            }}\r\n            value={titleText}\r\n            onChange={(event)=>{\r\n              setTitleText(event.target.value);\r\n              props.memo.title = event.target.value;\r\n            }}\r\n          />\r\n          <br/>\r\n          <TextField\r\n            label=\"Body\"\r\n            multiline\r\n            variant=\"outlined\"\r\n            style={{\r\n              marginTop:\"2%\",\r\n              marginBottom:\"2%\",\r\n              width:\"100%\",\r\n            }}\r\n            value={bodyText}\r\n            onChange={(event)=>{\r\n              setBodyText(event.target.value);\r\n              props.memo.body = event.target.value;\r\n            }}\r\n          />\r\n          </Paper>\r\n          </Container>\r\n    </div>\r\n  );\r\n}\r\n\r\ninterface IAppState{\r\n  location:{state:IHistoryState};\r\n  history:IHistory[];\r\n}\r\n\r\nfunction App(props: IAppState) {\r\n  let memodata: MemoData = props.location.state.memoData;\r\n  let editMode: \"insert\" | \"update\" = props.location.state.editMode;\r\n  let session: Session = props.location.state.session;\r\n  const [open, setOpen] = useState(false);\r\n  const [snackbarText, setSnackBarText] = useState(\"\");\r\n  return (\r\n    <MuiThemeProvider theme={theme}>\r\n      <div>\r\n        <Snackbar\r\n          anchorOrigin={{\r\n            vertical: 'bottom',\r\n            horizontal: 'left',\r\n          }}\r\n          open={open}\r\n          autoHideDuration={6000}\r\n          onClose={(event: SyntheticEvent<any, Event>, reason: SnackbarCloseReason) => {\r\n            handleClose(event,setOpen,reason);\r\n          }}\r\n          message={snackbarText}\r\n          action={\r\n            <React.Fragment>\r\n              <IconButton size=\"small\" aria-label=\"close\" color=\"inherit\" onClick={(event: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\r\n                handleClose(event,setOpen);\r\n              }}>\r\n                <CloseIcon fontSize=\"small\" />\r\n              </IconButton>\r\n            </React.Fragment>\r\n          }\r\n        />\r\n        <CssBaseline />\r\n        <Header history={props.history} snackbarTextHandle={setSnackBarText} handleClick={() => {\r\n          setOpen(true);\r\n        }}\r\n          memoData={memodata}\r\n          editMode={editMode}\r\n          session={session}\r\n        />\r\n        <Body snackbarTextHandle={setSnackBarText} handleClick={() => { setOpen(true); }} memo={memodata} />\r\n      </div>\r\n    </MuiThemeProvider>\r\n  );\r\n}\r\n\r\nfunction handleClose(\r\n  event: React.SyntheticEvent | React.MouseEvent, \r\n  setOpen:Dispatch<SetStateAction<boolean>>, \r\n  reason ?: string\r\n  ){\r\n  if (reason === 'clickaway') {\r\n    return;\r\n  }\r\n  setOpen(false);\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport Editor from './EditorPage';\r\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Router>\r\n        <Switch>\r\n          <Route exact path=\"/\" component={App} />\r\n          <Route exact path=\"/editor\" component={Editor} />\r\n          <Route component={App} />\r\n        </Switch>\r\n    </Router>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}